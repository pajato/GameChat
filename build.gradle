// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.0-beta2'
        classpath 'com.google.gms:google-services:3.0.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        mavenLocal()
    }

    // Configure the project build directories to be relative to a
    // base build directory if one is defined in, for example, a
    // Gradle properties file.  This provides the ability to store the
    // source code on a synced store, such as Google Drive, without
    // incurring the stress, strain and inherent problem in trying to
    // sync build files.  The build files would likely live isolated
    // to each local development system.

    // TODO: A better solution, possibly optimal, would be to provide
    // a Gradle plugin to handle a more complete implementation
    // mirroring the app structure.
    if (rootProject.hasProperty('baseBuildDir') && baseBuildDir != null) {
        buildDir = baseBuildDir + (parent == null ? "/${project.name}/build"
                : "/${rootProject.name}/${project.name}/build")
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Define and load the hidden property file holding API keys and other secrets. Idea borrowed from
// https://medium.com/@cassioso/a-strategy-to-secure-your-api-keys-using-gradle-b9c107272860
def secretsPropertiesFile = file("secrets.properties")
def secretsProperties = new Properties()
secretsProperties.load(new FileInputStream(secretsPropertiesFile))

// Define versions in a single place
ext {
    // Sdk and tools
    minSdkVersion = 19
    targetSdkVersion = 26
    compileSdkVersion = 26
    buildToolsVersion = '26.0.1'

    // App release version.
    versionCode = 13

    // App dependencies
    espressoVersion = '2.2.2'
    firebaseAuthUIVersion = '1.2.0'
    gmsVersion = '11.0.4'
    runnerVersion = '0.5'
    supportLibraryVersion = '26.0.1'
    uiautomatorVersion = '2.1.2'

    // GameChat secrets
    GC_STORE_FILE = secretsProperties['gcStoreFile']
    GC_STORE_PASSWORD = secretsProperties['gcStorePassword']
    GC_RELEASE_KEY_ALIAS = secretsProperties['gcReleaseKeyAlias']
    GC_RELEASE_KEY_PASSWORD = secretsProperties['gcReleaseKeyPassword']
    GC_STAGE_KEY_ALIAS = secretsProperties['gcStageKeyAlias']
    GC_STAGE_KEY_PASSWORD = secretsProperties['gcStageKeyPassword']
    GC_TEST_EMAIL = secretsProperties['gcTestAddress']
    GC_TEST_PASSWORD = secretsProperties['gcTestPassword']
    GC_TEST_PROVIDER = secretsProperties['gcTestProvider']
}
